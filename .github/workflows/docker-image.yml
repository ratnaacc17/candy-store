name: Deploy to AWS
on:
  push:
    branches:
      - "main"

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-south-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      PRIVATE_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
      PEM_SSH_KEY: ${{ secrets.AWS_PEM_KEY }}
      SERVER_PUBLIC_IP: ${{ secrets.AWS_EC2_IP }}
      PUBLIC_SSH_KEY: ${{ secrets.AWS_PUBLIC_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ecr-web-image
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: SSH into EC2 instance
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ env.SERVER_PUBLIC_IP }}
          username: ubuntu
          key: ${{ env.PEM_SSH_KEY }}
          script: |
            sudo apt-get -y update
            sudo apt-get remove docker* -y
            sudo curl -fsSL https://get.docker.com -o get-docker.sh
            sudo chmod 755 get-docker.sh
            sudo sh get-docker.sh
            sudo apt install awscli -y
            $(aws ecr get-login-password --region $AWS_REGION | sudo docker login --username AWS --password-stdin $REGISTRY)
            sudo docker pull $REGISTRY/$REPOSITORY:$IMAGE_TAG
            sudo docker run -d $REGISTRY/$REPOSITORY:$IMAGE_TAG
